generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id            String        @id @default(cuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  credits       Int           @default(150)
  emailAddress  String        @unique
  firstName     String?
  imageUrl      String?
  lastName      String?
  userToProject UserProject[]
  questions     Question[]
  paymentTransactions PaymentTransaction[]
}

model Project {
  id                   String                 @id 
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  name                 String
  githubUrl            String
  githubToken          String?
  deletedAt            DateTime?
  commit               Commit[]
  sourceCodeEmbeddings SourceCodeEmbeddings[]
  userToProject        UserProject[]
  questions            Question[]
}

model UserProject {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, projectId])
}

model Commit {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  projectId          String
  commitHash         String
  commitMessage      String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime
  summary            String?
  project            Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model SourceCodeEmbeddings {
  id               String                 @id @default(cuid())
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  summaryEmbedding Unsupported("vector")?
  projectId        String
  filename         String
  sourceCode       String
  summary          String
  project          Project                @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Question {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  question  String
  answer    String

  filesReferences Json?

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)


  userId String
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PaymentTransaction {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  credits Int
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
